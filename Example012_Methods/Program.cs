// Вид 1. Метод ничего не возвращают и ничего не принимают.

void Method1() // в данном методе отсутвтсвую аргументы.
{
    Console.WriteLine(" Автор ...");
}
// Method1(); // вызов метода.



// Вид 2. Ничего не возвращают, но принимают какие то аргументы.
void Method2(string msg) // прописали в методе аргумент "msg" с типом данных "string"
{
    Console.WriteLine(msg); // в теле прописали вывести в консоль аргуемент "msg"
}
// Method2("текст");

// пример метода где используется более одного аргумента
void Method2_1(string msg, int count)
{
    int i = 0;
    while (i < count)
    {
        Console.WriteLine(msg);
        i++;
    }
    
}
// Method2_1("Текст", 10); // прописал значения к первому аргументу "msg" и воторому аргументу "count"
// Method2_1(count: 4, msg: "хочу так"); // явно прописал аргумент: и его значение. Можно прописывать не по порядку.



//Вид 3. Что-то возвращают, но ничего не принимают
int Method3() //обязательно укзываем тип данных перед названием метода. Аргументы данный метод не принимает
{
    return DateTime.Now.Year; // обязательное использование оператора "return"
}

int date = Method3(); // указали переменную и через знак присваивания "=" прописали результат работы "Method3()"
// Console.WriteLine(date);



// Вид 4. Что-то принимает и что-то возпращает.
string Method4(int count, string d)
{
    int i = 0;
    string result = String.Empty; // значение "String.Empty" обозначает что строка будет пустой

    while (i < count)
    {
        result = result + d; // в переменную "result" при выполнения цикла будет присваиваться значение конкатенации(склеивания) переменных "result" + "d"
        i++;
    }
    return result; // в конце цикла прописали оператор "return" который будет возвращать переменную "result"
}

string res = Method4(10, "b"); // для вывода метода, прописываем переменную и вкладываем результат работы "Method4" указав значения введенных аргументов "count" и "string"
Console.WriteLine(res);